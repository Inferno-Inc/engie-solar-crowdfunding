/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_serviceRole",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_patronRole",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignAborted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refunded",
        type: "uint256",
      },
    ],
    name: "RefundExceeded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "StakingPoolInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "statusType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "TokenBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_signupStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signupEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contributionLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minRequiredStake",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patronRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024db380380620024db833981016040819052620000349162000229565b8151829082906200004d906003906020850190620000b6565b50805162000063906004906020840190620000b6565b5050600d80546001600160a01b031916331790555050601080546001600160a01b039590951664010000000002600160201b600160c01b031990951694909417909355600b91909155600c555062000305565b828054620000c490620002c8565b90600052602060002090601f016020900481019282620000e8576000855562000133565b82601f106200010357805160ff191683800117855562000133565b8280016001018555821562000133579182015b828111156200013357825182559160200191906001019062000116565b506200014192915062000145565b5090565b5b8082111562000141576000815560010162000146565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018457600080fd5b81516001600160401b0380821115620001a157620001a16200015c565b604051601f8301601f19908116603f01168101908282118183101715620001cc57620001cc6200015c565b81604052838152602092508683858801011115620001e957600080fd5b600091505b838210156200020d5785820183015181830184015290820190620001ee565b838211156200021f5760008385830101525b9695505050505050565b600080600080600060a086880312156200024257600080fd5b85516001600160a01b03811681146200025a57600080fd5b60208701516040880151606089015192975090955093506001600160401b03808211156200028757600080fd5b6200029589838a0162000172565b93506080880151915080821115620002ac57600080fd5b50620002bb8882890162000172565b9150509295509295909350565b600181811c90821680620002dd57607f821691505b60208210811415620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b6121c680620003156000396000f3fe6080604052600436106101f85760003560e01c806370a082311161010d578063a9059cbb116100a0578063dd2f35e91161006f578063dd2f35e91461051e578063dd62ed3e14610534578063eee6430c1461057a578063f7b188a51461059a578063fb86a404146105af57600080fd5b8063a9059cbb146104a8578063ac4ab3fb146104c8578063c24a0f8b146104e8578063db006a75146104fe57600080fd5b8063817b1cd2116100dc578063817b1cd2146104485780638456cb591461045e57806395d89b4114610473578063a457c2d71461048857600080fd5b806370a08231146103dc5780637332e077146103fc57806379cc6790146104125780637c0e77ac1461043257600080fd5b806318160ddd11610190578063313ce5671161015f578063313ce56714610362578063395093511461037e5780633a4b66f11461039e57806342966c68146103a65780634a3642a5146103c657600080fd5b806318160ddd146103025780631aeae7ba1461031757806323b872dd1461032d5780632f4350c21461034d57600080fd5b80630b97bc86116101cc5780630b97bc86146102b75780630c08bf88146102cd5780630e15561a146102e4578063152111f7146102fa57600080fd5b806216ee16146101fd5780630572b0cc1461024257806306fdde0314610265578063095ea7b314610287575b600080fd5b34801561020957600080fd5b506010546102259064010000000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561024e57600080fd5b506102576105c5565b604051908152602001610239565b34801561027157600080fd5b5061027a610610565b6040516102399190611eaa565b34801561029357600080fd5b506102a76102a2366004611f1b565b6106a2565b6040519015158152602001610239565b3480156102c357600080fd5b5061025760095481565b3480156102d957600080fd5b506102e26106b8565b005b3480156102f057600080fd5b5061025760075481565b6102e26107de565b34801561030e57600080fd5b50600254610257565b34801561032357600080fd5b50610257600b5481565b34801561033957600080fd5b506102a7610348366004611f45565b6109ef565b34801561035957600080fd5b506102e2610a99565b34801561036e57600080fd5b5060405160128152602001610239565b34801561038a57600080fd5b506102a7610399366004611f1b565b610ad0565b6102e2610b0c565b3480156103b257600080fd5b506102e26103c1366004611f81565b610ff6565b3480156103d257600080fd5b5061025760085481565b3480156103e857600080fd5b506102576103f7366004611f9a565b611002565b34801561040857600080fd5b50610257600f5481565b34801561041e57600080fd5b506102e261042d366004611f1b565b61101d565b34801561043e57600080fd5b5061025760115481565b34801561045457600080fd5b50610257600a5481565b34801561046a57600080fd5b506102e26110a3565b34801561047f57600080fd5b5061027a61115e565b34801561049457600080fd5b506102a76104a3366004611f1b565b61116d565b3480156104b457600080fd5b506102a76104c3366004611f1b565b611206565b3480156104d457600080fd5b506102a76104e3366004611f1b565b611213565b3480156104f457600080fd5b5061025760065481565b34801561050a57600080fd5b506102e2610519366004611f81565b61129c565b34801561052a57600080fd5b50610257600c5481565b34801561054057600080fd5b5061025761054f366004611fbc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561058657600080fd5b506102e2610595366004611fef565b61152d565b3480156105a657600080fd5b506102e2611749565b3480156105bb57600080fd5b5061025760055481565b60105460009062010000900460ff16156105fa5760405162461bcd60e51b81526004016105f19061203b565b60405180910390fd5b61060b61060633611002565b611824565b905090565b60606003805461061f90612067565b80601f016020809104026020016040519081016040528092919081815260200182805461064b90612067565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050905090565b60006106af33848461195d565b50600192915050565b600d546001600160a01b031633146106e25760405162461bcd60e51b81526004016105f19061209c565b60105460ff161561072a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481d195c9b5a5b985d195960721b60448201526064016105f1565b600754801561076f57600e546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561076d573d6000803e3d6000fd5b505b61079460006005819055600881905560078190556010805462ff000019169055600f55565b6010805460ff191660011790556040517f396ef65364c652a5186a005bb7dcf6aac4d2adcb6c6d0adf39a5f13104a2e344906107d39042815260200190565b60405180910390a150565b60105460ff16156108245760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b60448201526064016105f1565b60095442118015610836575060065442105b61087b5760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081b9bdd081858dd1a5d985d195960521b60448201526064016105f1565b601054610100900460ff16156108c45760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199d5b99195960921b60448201526064016105f1565b6000341161090b5760405162461bcd60e51b8152602060048201526014602482015273139bdd081c995dd85c991cc81c1c9bdd9a59195960621b60448201526064016105f1565b61091733600b54611213565b8061092c5750600d546001600160a01b031633145b6109785760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e726f6c6c656420617320736572766963652070726f766964657260448201526064016105f1565b346007600082825461098a91906120dd565b9091555050600e80546001600160a01b031916339081179091556010805461ff0019166101001790556040517f6379339f0ae63e95e65fad18ca2a7ec4e7e3f05f3cc5f7079f4d8da8cec34faa916109e591349042906120f5565b60405180910390a1565b60006109fc848484611a81565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610a815760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016105f1565b610a8e853385840361195d565b506001949350505050565b60105462010000900460ff1615610ac25760405162461bcd60e51b81526004016105f19061203b565b610ace61051933611002565b565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106af918590610b079086906120dd565b61195d565b60105460ff1615610b525760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b60448201526064016105f1565b6010546301000000900460ff16610b9d5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b60448201526064016105f1565b60003411610bdf5760405162461bcd60e51b815260206004820152600f60248201526e139bc81155d5081c1c9bdd9a591959608a1b60448201526064016105f1565b6008544210610c1f5760405162461bcd60e51b815260206004820152600c60248201526b14da59db9d5c08115b99195960a21b60448201526064016105f1565b600554600a5410610c655760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b60448201526064016105f1565b600f543360009081526012602052604090205410610cc55760405162461bcd60e51b815260206004820152601a60248201527f436f6e747269627574696f6e206c696d6974207265616368656400000000000060448201526064016105f1565b60105462010000900460ff1615610cee5760405162461bcd60e51b81526004016105f19061203b565b601154341015610d2f5760405162461bcd60e51b815260206004820152600c60248201526b56616c756520746f206c6f7760a01b60448201526064016105f1565b610d3b33600c54611213565b610d785760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b60448201526064016105f1565b600f5433600090815260126020526040902054610d969034906120dd565b10610f4a5733600090815260126020526040812054600f54610db89190612116565b610dc29034612116565b90506000610dd08234612116565b905060055481600a54610de391906120dd565b10610ebb576000600a54600554610dfa9190612116565b610e049083612116565b90506000610e128284612116565b33600090815260126020526040812080549293508392909190610e369084906120dd565b90915550610e4690503382611c50565b7fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc3334610e7385886120dd565b604051610e82939291906120f5565b60405180910390a1610e9c610e9783866120dd565b611d2f565b80600a6000828254610eae91906120dd565b90915550610f4692505050565b3360009081526012602052604081208054839290610eda9084906120dd565b90915550610eea90503382611c50565b7fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc333484604051610f1d939291906120f5565b60405180910390a1610f2e82611d2f565b80600a6000828254610f4091906120dd565b90915550505b5050565b60055434600a54610f5b91906120dd565b10610fae576000600a54600554610f729190612116565b610f7c9034612116565b90506000610f8a8234612116565b33600090815260126020526040812080549293508392909190610eda9084906120dd565b3360009081526012602052604081208054349290610fcd9084906120dd565b90915550610fdd90503334611c50565b34600a6000828254610fef91906120dd565b9091555050565b610fff8161129c565b50565b6001600160a01b031660009081526020819052604090205490565b6000611029833361054f565b9050818110156110875760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016105f1565b611094833384840361195d565b61109e8383611d5c565b505050565b600d546001600160a01b031633146110cd5760405162461bcd60e51b81526004016105f19061209c565b60105462010000900460ff16156110f65760405162461bcd60e51b81526004016105f19061203b565b6010805462ff000019166201000017905560408051818152600e918101919091526d18dbdb9d1c9858dd14185d5cd95960921b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a906080016109e5565b60606004805461061f90612067565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156111ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105f1565b6111fc338585840361195d565b5060019392505050565b60006106af338484611a81565b601054604051634aefbd8f60e11b815260009164010000000090046001600160a01b03169081906395df7b1e9061125390879087906001906004016120f5565b602060405180830381865afa158015611270573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611294919061212d565b949350505050565b60105462010000900460ff16156112c55760405162461bcd60e51b81526004016105f19061203b565b60105460ff16806112d7575060095442105b806112e3575060065442115b6113275760405162461bcd60e51b815260206004820152601560248201527415da5d1a191c985ddcc81b9bdd08185b1b1bddd959605a1b60448201526064016105f1565b61133333600c54611213565b6113705760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b60448201526064016105f1565b80600081116113b95760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b60448201526064016105f1565b6113c233611002565b6114045760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b60448201526064016105f1565b8061140e33611002565b10156114565760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b60448201526064016105f1565b600061146183611824565b905061146d3384611d5c565b604051339082156108fc029083906000818181858888f1935050505015801561149a573d6000803e3d6000fd5b507f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc63382426040516114ce939291906120f5565b60405180910390a17f40ec41b547e3a769f863d660b593350eb4ce5d779b1c4e3f112eefc40c8e81d8338442604051611509939291906120f5565b60405180910390a182600a60008282546115239190612116565b9091555050505050565b600d546001600160a01b031633146115575760405162461bcd60e51b81526004016105f19061209c565b6010546301000000900460ff16156115a75760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016105f1565b600082116115f75760405162461bcd60e51b815260206004820152601860248201527f77726f6e6720636f6e747269627574696f6e206c696d6974000000000000000060448201526064016105f1565b8183101561163a5760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b60448201526064016105f1565b85871061167f5760405162461bcd60e51b815260206004820152601360248201527257726f6e67207369676e757020636f6e66696760681b60448201526064016105f1565b8585116116ce5760405162461bcd60e51b815260206004820152601a60248201527f5374617274206665626f7265207369676e757020706572696f6400000000000060448201526064016105f1565b60068490556005839055600985905560088690556010805463ff00000019166301000000179055600f829055601181905560408051428152602081018790529081018590527f2942eb7be804ba7efe93e5b8f2e1b0bcde0a25deae1aabcad7ddd8b307bff90d9060600160405180910390a150505050505050565b600d546001600160a01b031633146117735760405162461bcd60e51b81526004016105f19061209c565b60105462010000900460ff166117c15760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd0814185d5cd959606a1b60448201526064016105f1565b6010805462ff00001916815560408051818152908101919091526f18dbdb9d1c9858dd155b9c185d5cd95960821b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a906080016109e5565b6000816000811161186f5760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b60448201526064016105f1565b61187833611002565b6118ba5760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b60448201526064016105f1565b806118c433611002565b101561190c5760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b60448201526064016105f1565b60105460ff16158015611920575060075415155b1561195357600061193284606461214f565b9050836119416103e88361216e565b61194b91906120dd565b925050611957565b8291505b50919050565b6001600160a01b0383166119bf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105f1565b6001600160a01b038216611a205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105f1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611ae55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105f1565b6001600160a01b038216611b475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105f1565b6001600160a01b03831660009081526020819052604090205481811015611bbf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105f1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611bf69084906120dd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c4291815260200190565b60405180910390a350505050565b6001600160a01b038216611ca65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105f1565b8060026000828254611cb891906120dd565b90915550506001600160a01b03821660009081526020819052604081208054839290611ce59084906120dd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b604051339082156108fc029083906000818181858888f19350505050158015610f46573d6000803e3d6000fd5b6001600160a01b038216611dbc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105f1565b6001600160a01b03821660009081526020819052604090205481811015611e305760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105f1565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611e5f908490612116565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015611ed757858101830151858201604001528201611ebb565b81811115611ee9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611f1657600080fd5b919050565b60008060408385031215611f2e57600080fd5b611f3783611eff565b946020939093013593505050565b600080600060608486031215611f5a57600080fd5b611f6384611eff565b9250611f7160208501611eff565b9150604084013590509250925092565b600060208284031215611f9357600080fd5b5035919050565b600060208284031215611fac57600080fd5b611fb582611eff565b9392505050565b60008060408385031215611fcf57600080fd5b611fd883611eff565b9150611fe660208401611eff565b90509250929050565b600080600080600080600060e0888a03121561200a57600080fd5b505085359760208701359750604087013596606081013596506080810135955060a0810135945060c0013592509050565b60208082526012908201527121b7b73a3930b1ba1034b990333937bd32b760711b604082015260600190565b600181811c9082168061207b57607f821691505b6020821081141561195757634e487b7160e01b600052602260045260246000fd5b60208082526011908201527026bab9ba103132903a34329030b236b4b760791b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156120f0576120f06120c7565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b600082821015612128576121286120c7565b500390565b60006020828403121561213f57600080fd5b81518015158114611fb557600080fd5b6000816000190483118215151615612169576121696120c7565b500290565b60008261218b57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122088b142ed9f91a16778c857ea4639b387c141d2b665aeeef56d0279f30904a45a64736f6c634300080c0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _claimManager: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _claimManager,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _claimManager: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimManager,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
